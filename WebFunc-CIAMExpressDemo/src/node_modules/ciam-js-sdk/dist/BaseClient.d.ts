import { BaseClientProps, RequestProxyType, AuthStorageProxyType, AuthTokens, JWTIDToken } from './types';
export declare abstract class BaseClient {
    props: BaseClientProps;
    request: RequestProxyType;
    authStorage: AuthStorageProxyType;
    constructor(props: BaseClientProps);
    setAuth(auth: AuthTokens): void;
    getAuth(): AuthTokens;
    clearAuth(): void;
    getUser(): JWTIDToken;
    /**
     * @name updateUser
     * @name_zh 发送短信验证码
     * @description 发送短信验证码, 短信验证码的有效时间为 60 s。
     *
     * @param {any} payload 更新的用户字段
     * @example
     * authenticationClient.updateUser({phoneNumber: '176xxxx6754')}
     *
     * @returns {Promise<JWTIDToken>}
     * @memberof AuthenticationClient
     */
    updateUser(payload: any): Promise<JWTIDToken | null>;
    isAuthenticated(): boolean;
    abstract login(): void;
    abstract logout(): void;
}
