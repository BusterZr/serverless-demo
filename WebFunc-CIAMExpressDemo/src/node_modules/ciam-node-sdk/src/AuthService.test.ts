// import { SpaClient } from './NodeClient';
// import { SpaClientProps } from 'ciam-js-sdk/src/types';

// // import tokens from './__fixtures__/tokens.json'

// const props: SpaClientProps = {
//   clientId: 'testClientID',
//   clientSecret: undefined,
//   location,
//   contentType: undefined,
//   userDomain: 'http://oauth2provider/',
//   redirectUri: 'http://localhost/',
//   scopes: ['openid', 'profile'],
// };

// const stubTokens: AuthTokens = {
//   accessToken: 'accessToken',
//   idToken: 'idToken',
//   refreshToken: 'refreshToken',
//   expiresIn: 3600,
//   tokenType: 'Bearer',
// };

// const authService = new SpaClient(props);

// describe('SpaClient', () => {
//   it('is truthy', () => {
//     expect(SpaClient).toBeTruthy();
//   });

//   it('should add requestId to headers', () => {
//     const fakeFetch = jest.fn();
//     window.fetch = fakeFetch;
//     const authorizationCode = 'authorizationCode';
//     authService.fetchToken(authorizationCode).then((tokens) => {
//       console.log(tokens);
//       expect(fakeFetch.mock.calls[0][1]).toHaveProperty('headers');
//       expect(fakeFetch.mock.calls[0][1].headers).toHaveProperty('requestId');
//     });
//   });

//   it('it parses a token', () => {
//     window.localStorage.setItem('auth', tokens)
//     authService.getUser()
//   })
// });
