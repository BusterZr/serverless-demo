import { BaseClient } from 'ciam-js-sdk';
import { NodeClientProps, AuthTokens, JWTIDToken } from './types';
export declare class NodeClient extends BaseClient {
    props: NodeClientProps;
    timeout?: number;
    constructor(props: NodeClientProps);
    logout(): Promise<string>;
    generateAuthUrl(): Promise<string>;
    login(): Promise<void>;
    /**
     * @name authorize
     * @description OAuth2 认证普通授权码模式登录,认证后302到redirect_url
     *
     * @returns {boolean}
     * @memberof NodeClient
     */
    getAuthorizeByNormal(): string;
    /**
     * @name fetchToken
     * @description 获取token，更新本地缓存
     *
     * @param {string} code authorize 302返回的code，或者本地auth中的refresh_token
     * @isRefresh {boolean} 是否刷新token
     *
     * @example
     * NodeClient.fetchToken(
     *  'code value',
     *  true
     * )
     *
     * @returns {Promise<AuthTokens>}
     * @memberof NodeClient
     */
    fetchToken(code: string, isRefresh?: boolean): Promise<AuthTokens>;
    setAuthTokens(auth: AuthTokens): void;
    getAuthTokens(): AuthTokens;
    fetchUserInfo(token: string): Promise<JWTIDToken | null>;
}
