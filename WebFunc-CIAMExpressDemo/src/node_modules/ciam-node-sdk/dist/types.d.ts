import { BaseClientProps } from 'ciam-js-sdk';
export declare type Maybe<T> = T | null;
export declare type Exact<T extends {
    [key: string]: any;
}> = {
    [K in keyof T]: T[K];
};
/** All built-in and custom scalars, mapped to their actual values */
export declare type Scalars = {
    ID: string;
    String: string;
    Boolean: boolean;
    Int: number;
    Float: number;
    Object: any;
};
export interface AuthStorageProxyType {
    setAuth(auth: AuthTokens): void;
    getAuth(): AuthTokens;
    clearAuth(): void;
    getToken(): string | null;
}
export declare type CommonMessage = {
    /** 可读的接口响应说明，请以业务状态码 code 作为判断业务是否成功的标志 */
    message?: Maybe<Scalars['String']>;
    /**
     * 业务状态码（与 HTTP 响应码不同）
     */
    code?: Maybe<Scalars['Int']>;
};
export interface AuthTokens {
    id_token: string;
    access_token: string;
    refresh_token: string;
    expires_in: number;
    expires_at?: number;
    token_type: string;
}
export interface JWTIDToken {
    given_name: string;
    family_name: string;
    name: string;
    email: string;
    userName: string;
}
export interface TokenRequestBody {
    clientId: string;
    grantType: string;
    redirectUri?: string;
    refresh_token?: string;
    clientSecret?: string;
    code?: string;
    codeVerifier?: string;
}
export interface NodeClientProps extends BaseClientProps {
    redirectUri: string;
    logoutRedirectUrl: string;
    scopes: string[];
    clientSecret?: string;
    contentType?: string;
    autoRefresh?: boolean;
    refreshSlack?: number;
    protocol?: ProtocolType;
}
export declare enum ProtocolType {
    OIDC_PKCE = "OIDC_PKCE",
    OIDC_NORMAL = "OIDC_NORMAL"
}
