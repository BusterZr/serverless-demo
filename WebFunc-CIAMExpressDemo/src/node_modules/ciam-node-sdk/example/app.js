const createError = require('http-errors');
const express = require('express');
const path = require('path');
const cookieParser = require('cookie-parser');
const logger = require('morgan');
const { NodeClient } = require('ciam-node-sdk'); // node-sdk

const ciam = new NodeClient({
  clientId: 'MDQ1ZmY4OTFkODE3NGEwYmJhNTJmYjY5YTRlNzcyNWY',
  clientSecret: 'Tgi9mcKYEzWBA2pKYnxg671qtTyjcfHB',
  userDomain: 'https://shingao.portal.tencentciam.com',
  redirectUri: 'https://service-o4u73cst-1253509498.sh.apigw.tencentcs.com/release/callback',
  logoutRedirectUrl: 'https://service-o4u73cst-1253509498.sh.apigw.tencentcs.com/release/',
  scopes: ['openid'],
});

const session = require('express-session');
const indexRouter = require('./routes/index');

const app = express();

// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');

app.use(logger('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));
app.use(
  session({
    secret: 'a very long random string',
    resave: true,
    saveUninitialized: false,
  }),
);

app.use('/', indexRouter);
// 登录CIAM
app.get('/login', async (req, res) => {
  const ciamAccessToken =    'eyJraWQiOiIzYTZkMDc4NTM1Nzk0OWQyOGJiMjA3MzkxNGM2ZDAyNiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJiNmRiYTlkMC01YjQ1LTRhYzItYjM4MC1hZTQ0YzFmZmRhOTkiLCJhdWQiOiJNRFExWm1ZNE9URmtPREUzTkdFd1ltSmhOVEptWWpZNVlUUmxOemN5TldZIiwibmJmIjoxNjQ2ODEzNDg5LCJzY29wZSI6WyJvcGVuaWQiXSwiaXNzIjoiaHR0cHM6XC9cL3NoaW5nYW8ucG9ydGFsLnRlbmNlbnRjaWFtLmNvbSIsImV4cCI6MTY0NjgxNDA4OSwiaWF0IjoxNjQ2ODEzNDg5LCJqdGkiOiIzMzYzNzMyZi01M2JjLTQ2OGYtYmMzZS1jZGI1MTVjMGE5OGYifQ.HJwxvuW3WsDmu9h0YBKjfRXoQpvY8sBBqkw0BKRxytFMWjCsU8dyC4YAHBCKbATTWn1RFXqREnrddZYSuuq6lmWgptzlX1InwH1D4Wbk4NoMUH6ArJiOA4N-Li20aJgSA8VL_h6m7jqh5BmMVhDbzz9xkagnpvDVtK6QzO8vp-NmzYzeLKW90p2EyRqy8-8SHJz3EYmVjo262FnWJguTd43N9eL4MeSFjDUjiXYqEaOAYjNr2_fI81L3Jk8yGx0J-Gdu-mQs7X_WaJhPthZtbLPe8hP4WZxUH-t-Lq-uaf0RIVKsPD6ZTIDWIS55otbxVnnO71twQJ31iGkYd3d6xw';
  const userInfo = await ciam.fetchUserInfo(decodeURIComponent(ciamAccessToken));
  console.log(56657567567, userInfo);
  // const url = await ciam.generateAuthUrl();
  res.json({ a: 1 });
});
// 处理redirect回调
app.get('/callback', async (req, res) => {
  const { code } = req.query;
  const result = await ciam.fetchToken(code);
  const { access_token, id_token } = result;
  const userInfo = await ciam.getUser();
  req.session.user = { ...userInfo, userInfo };
  res.redirect('/');
});
// 退出CIAM
app.get('/logout', async (req, res) => {
  if (!req.session.user) {
    res.redirect('/');
  }
  const url = await ciam.logout();
  req.session.destroy();
  res.redirect(url);
});
// 登录保护 查看用户信息
app.get('/userinfo', async (req, res) => {
  if (!req.session.user) {
    return res.redirect('/login');
  }
  res.send(JSON.stringify(req.session.user, null, 4));
});
// catch 404 and forward to error handler
app.use((req, res, next) => {
  next(createError(404));
});

// error handler
app.use((err, req, res, next) => {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

// serverless需要
// app.listen(9000, function() {
//   console.log("listening on port 9000");
// });
module.exports = app;
